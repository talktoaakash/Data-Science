import pandas as pd

def compare_dataframes(df1, df2, keys=None):
    """
    Compare two pandas DataFrames and return summary of mismatches like PROC COMPARE.
    
    Args:
        df1: First DataFrame
        df2: Second DataFrame
        keys: Optional list of key columns to align on before comparing
        
    Returns:
        A summary DataFrame of differences.
    """
    # Align on keys if provided
    if keys:
        df1 = df1.set_index(keys).sort_index()
        df2 = df2.set_index(keys).sort_index()
    
    # Ensure same columns and order
    df1, df2 = df1[df2.columns], df2
    
    # Compare values
    diff = df1.compare(df2, keep_shape=True, keep_equal=False)
    
    # Create a summary of column-wise difference counts
    summary = {}
    for col in df1.columns:
        if col in diff.columns.get_level_values(0):
            count = diff[col].dropna().shape[0] // 2  # divide by 2 since each has 'self' and 'other'
            summary[col] = count
        else:
            summary[col] = 0
    
    summary_df = pd.DataFrame.from_dict(summary, orient='index', columns=['Mismatch_Count'])
    summary_df = summary_df.sort_values(by='Mismatch_Count', ascending=False)
    
    return summary_df, diff



import pandas as pd

def compare_dataframes(df1, df2, on=None):
    """
    Compare two DataFrames and return:
    - summary_df: Mismatch count per column
    - full_diff: All mismatches with both df1 and df2 values
    - mismatch_details: Dict of mismatched rows for each mismatched column
    """
    # Step 1: Align both DataFrames
    if on:
        df1 = df1.set_index(on).sort_index()
        df2 = df2.set_index(on).sort_index()
    else:
        df1 = df1.sort_index()
        df2 = df2.sort_index()

    # Ensure both DataFrames have same columns
    common_cols = df1.columns.intersection(df2.columns)
    df1 = df1[common_cols]
    df2 = df2[common_cols]

    # Step 2: Compare
    diff = df1.compare(df2, keep_shape=True, keep_equal=False)

    # Step 3: Count mismatches by column
    mismatch_counts = {}
    for col in common_cols:
        if col in diff.columns.get_level_values(0):
            mismatch_counts[col] = diff[col].dropna().shape[0]
    summary_df = pd.DataFrame({
        'column': list(mismatch_counts.keys()),
        'num_mismatches': list(mismatch_counts.values())
    })

    # Step 4: Get detailed mismatches per column
    mismatch_details = {}
    for col in summary_df['column']:
        mismatch_rows = diff[col].dropna()
        mismatch_rows.columns = [f'{col}_df1', f'{col}_df2']
        mismatch_details[col] = mismatch_rows

    return summary_df, diff, mismatch_details
